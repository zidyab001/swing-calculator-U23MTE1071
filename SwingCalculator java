import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class SwingCalculator {

    private JFrame frame;
    private JTextField textField;
    private String currentInput = "";
    private String operator = "";
    private double firstNum = 0;

    public static void main(String[] args) {
        EventQueue.invokeLater(() -> {
            try {
                Calculator window = new Calculator();
                window.frame.setVisible(true);
            } catch (Exception e) {
                e.printStackTrace();
            }
        });
    }

    public Calculator() {
        initialize();
    }

    private void initialize() {
        frame = new JFrame();
        frame.setBounds(100, 100, 400, 600);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.getContentPane().setLayout(new BorderLayout());

        textField = new JTextField();
        textField.setFont(new Font("Arial", Font.PLAIN, 30));
        textField.setHorizontalAlignment(SwingConstants.RIGHT);
        textField.setEditable(false);
        frame.getContentPane().add(textField, BorderLayout.NORTH);

        JPanel panel = new JPanel();
        panel.setLayout(new GridLayout(5, 4, 10, 10));
        frame.getContentPane().add(panel, BorderLayout.CENTER);

        String[] buttons = {
                "7", "8", "9", "/",
                "4", "5", "6", "*",
                "1", "2", "3", "-",
                "0", ".", "=", "+",
                "C", "(", ")", "%"
        };

        for (String text : buttons) {
            JButton button = new JButton(text);
            button.setFont(new Font("Arial", Font.PLAIN, 24));
            button.addActionListener(new ButtonClickListener());
            panel.add(button);
        }
    }

    private class ButtonClickListener implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            String command = e.getActionCommand();

            if (command.equals("C")) {
                currentInput = "";
                operator = "";
                firstNum = 0;
                textField.setText("");
            } else if (command.equals("=")) {
                if (!operator.isEmpty()) {
                    double secondNum = Double.parseDouble(currentInput);
                    double result = 0;

                    switch (operator) {
                        case "+":
                            result = firstNum + secondNum;
                            break;
                        case "-":
                            result = firstNum - secondNum;
                            break;
                        case "*":
                            result = firstNum * secondNum;
                            break;
                        case "/":
                            if (secondNum != 0) {
                                result = firstNum / secondNum;
                            } else {
                                textField.setText("Error");
                                return;
                            }
                            break;
                        case "%":
                            result = firstNum % secondNum;
                            break;
                    }

                    textField.setText(String.valueOf(result));
                    currentInput = String.valueOf(result);
                    operator = "";
                }
            } else if (command.equals("(") || command.equals(")")) {
                currentInput += command;
                textField.setText(currentInput);
            } else {
                currentInput += command;
                textField.setText(currentInput);
            }

            if (command.equals("+") || command.equals("-") || command.equals("*") || command.equals("/") || command.equals("%")) {
                if (!currentInput.isEmpty()) {
                    firstNum = Double.parseDouble(currentInput);
                    operator = command;
                    currentInput = "";
                }
            }
        }
    }
}
